syntax = "proto3";
package v1;
option go_package = "github.com/aswcloud/v1/servercomm";

import "base.proto";

import "k8s_namespace.proto";
import "k8s_deployment.proto";
import "k8s_pods.proto";
import "k8s_service.proto";
import "k8s_stroage.proto";


service Kubernetes {
    // Needs, Authorization
    rpc CreateNamespace(Namespace) returns (Result);
    // Needs, Authorization
    rpc ReadNamespace(Void) returns (ListNamespace);
    // Needs, Authorization
    rpc UpdateNamespace(UpdateNamespace) returns (Result);
    // Needs, Authorization
    rpc DeleteNamespace(Namespace) returns (Result);


    // Needs, Authorization
    rpc CreateDeployment(Deployment) returns (Result);
    // Needs, Authorization
    rpc ReadDeployment(Namespace) returns (ListDeployment);
    // Needs, Authorization
    rpc UpdateDeployment(UpdateDeployment) returns (Result);
    // Needs, Authorization
    rpc DeleteDeployment(DeleteDeployment) returns (Result);
    
}


message Service { 
    string type = 1;
} 


message Storage { 

}

message Pod {

}